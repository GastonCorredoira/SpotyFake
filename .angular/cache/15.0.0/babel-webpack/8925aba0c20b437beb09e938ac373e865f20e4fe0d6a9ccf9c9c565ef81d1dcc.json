{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class InputRateComponent {\n  constructor() {\n    this.rateChange = new EventEmitter();\n  }\n  ngOnInit() {\n    throw new Error('Method not implemented.');\n  }\n  upRate() {\n    if (this.rate < 5) {\n      this.rate++;\n      this.rateChange.emit(this.rate);\n    }\n  }\n  downRate() {\n    if (this.rate > 0) {\n      this.rate--;\n      this.rateChange.emit(this.rate);\n    }\n  }\n  changeRate(event) {\n    console.log(event.key);\n    this.rateChange.emit(this.rate);\n  }\n  static #_ = this.ɵfac = function InputRateComponent_Factory(t) {\n    return new (t || InputRateComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InputRateComponent,\n    selectors: [[\"app-input-rate\"]],\n    inputs: {\n      rate: \"rate\"\n    },\n    outputs: {\n      rateChange: \"rateChange\"\n    },\n    decls: 7,\n    vars: 2,\n    consts: [[3, \"click\"], [3, \"ngModel\", \"ngModelChange\", \"keyup\"]],\n    template: function InputRateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function InputRateComponent_Template_button_click_0_listener() {\n          return ctx.downRate();\n        });\n        i0.ɵɵtext(1, \"-\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function InputRateComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.rate = $event;\n        })(\"keyup\", function InputRateComponent_Template_input_keyup_2_listener($event) {\n          return ctx.changeRate($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function InputRateComponent_Template_button_click_5_listener() {\n          return ctx.upRate();\n        });\n        i0.ɵɵtext(6, \"+\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.rate);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.rate);\n      }\n    },\n    dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAA+B,eAAe;;;AAQ9E,OAAM,MAAOC,kBAAkB;EAE7BC;IAUA,eAAU,GAAyB,IAAIF,YAAY,EAAU;EAT7D;EACAG,QAAQ;IACN,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAQAC,MAAM;IACJ,IAAI,IAAI,CAACC,IAAI,GAAG,CAAC,EAAE;MACjB,IAAI,CAACA,IAAI,EAAE;MACX,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,IAAI,CAACF,IAAI,CAAC;;EAEnC;EAEAG,QAAQ;IACN,IAAI,IAAI,CAACH,IAAI,GAAG,CAAC,EAAE;MACjB,IAAI,CAACA,IAAI,EAAE;MACX,IAAI,CAACC,UAAU,CAACC,IAAI,CAAC,IAAI,CAACF,IAAI,CAAC;;EAEnC;EAEAI,UAAU,CAACC,KAAoB;IAC7BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,GAAG,CAAC;IACtB,IAAI,CAACP,UAAU,CAACC,IAAI,CAAC,IAAI,CAACF,IAAI,CAAC;EACjC;EAAC;qBA/BUL,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAc;IAAAC;MAAAV;IAAA;IAAAW;MAAAV;IAAA;IAAAW;IAAAC;IAAAC;IAAAC;MAAA;QCR/BC,iCAA6B;QAArBA;UAAA,OAASC,cAAU;QAAA,EAAC;QAACD,iBAAC;QAAAA,iBAAS;QAEvCA,gCAAuD;QAAhDA;UAAA;QAAA,EAAkB;UAAA,OAAUC,sBAAkB;QAAA,EAA5B;QAAzBD,iBAAuD;QACvDA,yBAAG;QAAAA,YAAQ;QAAAA,iBAAI;QAEfA,iCAA2B;QAAnBA;UAAA,OAASC,YAAQ;QAAA,EAAC;QAACD,iBAAC;QAAAA,iBAAS;;;QAH9BA,eAAkB;QAAlBA,kCAAkB;QACtBA,eAAQ;QAARA,8BAAQ","names":["EventEmitter","InputRateComponent","constructor","ngOnInit","Error","upRate","rate","rateChange","emit","downRate","changeRate","event","console","log","key","selectors","inputs","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\gasto\\OneDrive\\Documents\\Gaston\\Portfolio\\Spotify\\Proyect\\techshop\\src\\app\\input-rate\\input-rate.component.ts","C:\\Users\\gasto\\OneDrive\\Documents\\Gaston\\Portfolio\\Spotify\\Proyect\\techshop\\src\\app\\input-rate\\input-rate.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Song } from '../song/Song';\n\n@Component({\n  selector: 'app-input-rate',\n  templateUrl: './input-rate.component.html',\n  styleUrls: ['./input-rate.component.scss']\n})\nexport class InputRateComponent implements OnInit {\n\n  constructor(){\n  }\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\n\n  @Input()\n  rate!: number;\n\n  @Output()\n  rateChange: EventEmitter<number> = new EventEmitter<number>();\n\n  upRate(): void{\n    if (this.rate < 5) {\n      this.rate++;\n      this.rateChange.emit(this.rate);\n    }\n  }\n\n  downRate(): void{\n    if (this.rate > 0) {\n      this.rate--;\n      this.rateChange.emit(this.rate);\n    }\n  }\n\n  changeRate(event: { key: any; }): void{\n    console.log(event.key);\n    this.rateChange.emit(this.rate);\n  }\n}\n","<button (click)=\"downRate()\">-</button>\n\n<input [(ngModel)]=\"rate\" (keyup)=\"changeRate($event)\">\n<p>{{rate}}</p>\n\n<button (click)=\"upRate()\">+</button>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}