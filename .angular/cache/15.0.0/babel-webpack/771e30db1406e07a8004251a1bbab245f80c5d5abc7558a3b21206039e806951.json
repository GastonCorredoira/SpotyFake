{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst AlbumEndpoint = 'http://localhost/apiSpotify/api/albums';\nconst SongEndpoint = 'http://localhost/apiSpotify/api/songs';\nexport class TechDataService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllAlbums() {\n    return this.http.get(AlbumEndpoint);\n  }\n  getRandomAlbums() {\n    return this.http.get(AlbumRandomEndpoint);\n  }\n  getAllSongs() {\n    return this.http.get(SongEndpoint);\n  }\n  static #_ = this.ɵfac = function TechDataService_Factory(t) {\n    return new (t || TechDataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TechDataService,\n    factory: TechDataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,QAAa,MAAM;;;AAItC,MAAMC,aAAa,GAAG,wCAAwC;AAC9D,MAAMC,YAAY,GAAG,uCAAuC;AAM5D,OAAM,MAAOC,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAEjCC,YAAY;IACjB,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAUN,aAAa,CAAC;EAC9C;EAEOO,eAAe;IACpB,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAUE,mBAAmB,CAAC;EACpD;EAEOC,WAAW;IAChB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAASL,YAAY,CAAC;EAC5C;EAAC;qBAdUC,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAAQ,SAAfR,eAAe;IAAAS,YAFd;EAAM","names":["Observable","AlbumEndpoint","SongEndpoint","TechDataService","constructor","http","getAllAlbums","get","getRandomAlbums","AlbumRandomEndpoint","getAllSongs","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\gasto\\OneDrive\\Documents\\Gaston\\Portfolio\\Spotify\\Proyect\\techshop\\src\\app\\tech-data.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\nimport { Album } from './album/Album';\nimport { Song } from './song/Song';\n\nconst AlbumEndpoint = 'http://localhost/apiSpotify/api/albums';\nconst SongEndpoint = 'http://localhost/apiSpotify/api/songs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TechDataService {\n\n  constructor(private http: HttpClient) { }\n\n  public getAllAlbums(): Observable<Album[]> {\n    return this.http.get<Album[]>(AlbumEndpoint)\n  }\n\n  public getRandomAlbums(): Observable<Album[]> {\n    return this.http.get<Album[]>(AlbumRandomEndpoint)\n  }\n\n  public getAllSongs(): Observable<Song[]> {\n    return this.http.get<Song[]>(SongEndpoint)\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}