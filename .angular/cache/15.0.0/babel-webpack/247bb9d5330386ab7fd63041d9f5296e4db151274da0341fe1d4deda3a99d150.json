{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../favourites.service\";\nimport * as i2 from \"../tech-data.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../rates.service\";\nfunction SongComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function SongComponent_tr_14_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const song_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.addFavourite(song_r1));\n    });\n    i0.ɵɵtext(7, \"Add to favourites\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\", 4)(9, \"app-input-rate\", 5);\n    i0.ɵɵlistener(\"rateChange\", function SongComponent_tr_14_Template_app_input_rate_rateChange_9_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const song_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(song_r1.rate = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function SongComponent_tr_14_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const song_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.rateSong(song_r1));\n    });\n    i0.ɵɵtext(11, \"Rate song\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const song_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(song_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(song_r1.duration);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"rate\", song_r1.rate);\n  }\n}\nexport class SongComponent {\n  constructor(favourites, dataService, router, rate) {\n    this.favourites = favourites;\n    this.dataService = dataService;\n    this.router = router;\n    this.rate = rate;\n    this.url = this.router.url;\n    this.songs = [];\n  }\n  static getFromAlbum(id) {\n    throw new Error('Method not implemented.');\n  }\n  ngOnInit() {\n    console.log(this.url);\n    if (this.url == '/home') {\n      this.getRandom();\n    } else if (this.url == '/songs') {\n      this.getAll();\n    }\n  }\n  addFavourite(song) {\n    this.favourites.addFavouriteSong(song);\n  }\n  getAll() {\n    this.dataService.getAllSongs().subscribe(songs => this.songs = songs);\n  }\n  getRandom() {\n    this.dataService.getRandomSongs().subscribe(songs => this.songs = songs);\n  }\n  getFromAlbum(albumId) {\n    this.dataService.getFromAlbum(albumId).subscribe(songs => this.songs = songs);\n  }\n  rateSong(song) {\n    this.rate.rateSong(song);\n  }\n  static #_ = this.ɵfac = function SongComponent_Factory(t) {\n    return new (t || SongComponent)(i0.ɵɵdirectiveInject(i1.FavouritesService), i0.ɵɵdirectiveInject(i2.TechDataService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.RatesService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SongComponent,\n    selectors: [[\"app-song\"]],\n    decls: 15,\n    vars: 1,\n    consts: [[1, \"table\", \"table-dark\", \"table-hover\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", \"boton\", 3, \"click\"], [\"id\", \"flex\"], [3, \"rate\", \"rateChange\"], [1, \"btn\", 2, \"color\", \"white\", 3, \"click\"]],\n    template: function SongComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h3\");\n        i0.ɵɵtext(1, \"Some songs for you\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"tr\")(5, \"th\", 1);\n        i0.ɵɵtext(6, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"th\", 1);\n        i0.ɵɵtext(8, \"Duration\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\", 1);\n        i0.ɵɵtext(10, \"Add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\", 1);\n        i0.ɵɵtext(12, \"Rate\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"tbody\");\n        i0.ɵɵtemplate(14, SongComponent_tr_14_Template, 12, 3, \"tr\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.songs);\n      }\n    },\n    styles: [\"table[_ngcontent-%COMP%] {\\n  color: white;\\n}\\n\\n.boton[_ngcontent-%COMP%] {\\n  background-color: #1ED760;\\n  border-color: #1ED760;\\n}\\n\\n#flex[_ngcontent-%COMP%] {\\n  display: flex;\\n}\\n/*# sourceURL=webpack://./src/app/song/song.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc29uZy9zb25nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQUNKOztBQUVBO0VBQ0kseUJBQUE7RUFDQSxxQkFBQTtBQUNKOztBQUVBO0VBQ0ksYUFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi5ib3RvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxRUQ3NjA7XG4gIGJvcmRlci1jb2xvcjogIzFFRDc2MDtcbn1cblxuI2ZsZXgge1xuICBkaXNwbGF5OiBmbGV4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;;;IAYIA,0BAA+B;IACzBA,YAAa;IAAAA,iBAAK;IACtBA,0BAAI;IAAAA,YAAiB;IAAAA,iBAAK;IAC1BA,0BAAI;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,2CAAkB;IAAA,EAAC;IAA6CA,iCAAiB;IAAAA,iBAAS;IAC/GA,6BAAc;IACIA;MAAA;MAAA;MAAA,OAAUA,qCAAiB;IAAA,EAAP;IAACA,iBAAiB;IACtDA,kCAAmE;IAAzBA;MAAA;MAAA;MAAA;MAAA,OAASA,uCAAc;IAAA,EAAC;IAACA,0BAAS;IAAAA,iBAAS;;;;IALnFA,eAAa;IAAbA,kCAAa;IACbA,eAAiB;IAAjBA,sCAAiB;IAGHA,eAAoB;IAApBA,mCAAoB;;;ACH5C,OAAM,MAAOC,aAAa;EAOxBC,YAAoBC,UAA6B,EAAUC,WAA4B,EAAUC,MAAc,EAAUC,IAAkB;IAAvH,eAAU,GAAVH,UAAU;IAA6B,gBAAW,GAAXC,WAAW;IAA2B,WAAM,GAANC,MAAM;IAAkB,SAAI,GAAJC,IAAI;IAF7H,QAAG,GAAG,IAAI,CAACD,MAAM,CAACE,GAAG;IAerB,UAAK,GAAW,EAAE;EAZlB;EAPA,OAAOC,YAAY,CAACC,EAAU;IAC5B,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAOAC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,GAAG,CAAC;IACrB,IAAI,IAAI,CAACA,GAAG,IAAI,OAAO,EAAE;MACvB,IAAI,CAACO,SAAS,EAAE;KACjB,MACI,IAAI,IAAI,CAACP,GAAG,IAAI,QAAQ,EAAC;MAC5B,IAAI,CAACQ,MAAM,EAAE;;EAEjB;EAIAC,YAAY,CAACC,IAAU;IACrB,IAAI,CAACd,UAAU,CAACe,gBAAgB,CAACD,IAAI,CAAC;EACxC;EAEAF,MAAM;IACJ,IAAI,CAACX,WAAW,CAACe,WAAW,EAAE,CAACC,SAAS,CAACC,KAAK,IAAI,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAC;EACvE;EAEAP,SAAS;IACP,IAAI,CAACV,WAAW,CAACkB,cAAc,EAAE,CAACF,SAAS,CAACC,KAAK,IAAI,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAC;EAC1E;EAEAb,YAAY,CAACe,OAAe;IAC1B,IAAI,CAACnB,WAAW,CAACI,YAAY,CAACe,OAAO,CAAC,CAACH,SAAS,CAACC,KAAK,IAAI,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAC;EAC/E;EAEAG,QAAQ,CAACP,IAAU;IACjB,IAAI,CAACX,IAAI,CAACkB,QAAQ,CAACP,IAAI,CAAC;EAC1B;EAAC;qBAxCUhB,aAAa;EAAA;EAAA;UAAbA,aAAa;IAAAwB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDd1B7B,0BAAI;QAAAA,kCAAkB;QAAAA,iBAAK;QAE3BA,gCAA4C;QAGtBA,oBAAI;QAAAA,iBAAK;QACzBA,6BAAgB;QAAAA,wBAAQ;QAAAA,iBAAK;QAC7BA,6BAAgB;QAAAA,oBAAG;QAAAA,iBAAK;QACxBA,8BAAgB;QAAAA,qBAAI;QAAAA,iBAAK;QAG7BA,8BAAO;QACLA,+DAQK;QACPA,iBAAQ;;;QATeA,gBAAQ;QAARA,mCAAQ","names":["i0","SongComponent","constructor","favourites","dataService","router","rate","url","getFromAlbum","id","Error","ngOnInit","console","log","getRandom","getAll","addFavourite","song","addFavouriteSong","getAllSongs","subscribe","songs","getRandomSongs","albumId","rateSong","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\gasto\\OneDrive\\Documents\\Gaston\\Portfolio\\Spotify\\Proyect\\spotify\\src\\app\\song\\song.component.html","C:\\Users\\gasto\\OneDrive\\Documents\\Gaston\\Portfolio\\Spotify\\Proyect\\spotify\\src\\app\\song\\song.component.ts"],"sourcesContent":["<h3>Some songs for you</h3>\n\n<table class=\"table table-dark table-hover\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Duration</th>\n      <th scope=\"col\">Add</th>\n      <th scope=\"col\">Rate</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let song of songs\">\n      <td>{{song.name}}</td>\n      <td>{{song.duration}}</td>\n      <td><button (click)=\"addFavourite(song)\" type=\"button\" class=\"btn btn-warning boton\">Add to favourites</button></td>\n      <td id=\"flex\">\n        <app-input-rate [(rate)]=\"song.rate\"></app-input-rate>\n        <button class=\"btn\" style=\"color: white;\" (click)=\"rateSong(song)\">Rate song</button>\n      </td>\n    </tr>\n  </tbody>\n</table>","import { NumberFormatStyle } from '@angular/common';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FavouritesService } from '../favourites.service';\nimport { TechDataService } from '../tech-data.service';\nimport { RatesService } from '../rates.service';\nimport { Song } from './Song';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-song',\n  templateUrl: './song.component.html',\n  styleUrls: ['./song.component.scss']\n})\n\nexport class SongComponent implements OnInit {\n  static getFromAlbum(id: number) {\n    throw new Error('Method not implemented.');\n  }\n\n  url = this.router.url;\n\n  constructor(private favourites: FavouritesService, private dataService: TechDataService, private router: Router, private rate: RatesService) {\n  }\n\n  ngOnInit(): void {\n    console.log(this.url);\n    if (this.url == '/home') {\n      this.getRandom();\n    }\n    else if (this.url == '/songs'){\n      this.getAll();\n    }    \n  }\n\n  songs: Song[] = [];\n\n  addFavourite(song: Song): void {\n    this.favourites.addFavouriteSong(song);\n  }\n\n  getAll() {\n    this.dataService.getAllSongs().subscribe(songs => this.songs = songs);\n  }\n  \n  getRandom() {\n    this.dataService.getRandomSongs().subscribe(songs => this.songs = songs);\n  }\n\n  getFromAlbum(albumId: number) {\n    this.dataService.getFromAlbum(albumId).subscribe(songs => this.songs = songs);\n  }\n\n  rateSong(song: Song): void {\n    this.rate.rateSong(song);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}